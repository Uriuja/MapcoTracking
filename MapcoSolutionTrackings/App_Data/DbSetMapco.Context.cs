//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MapcoSolutionTrackings.App_Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IMSOL_mpEntities : DbContext
    {
        public IMSOL_mpEntities()
            : base("name=IMSOL_mpEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblCampos> tblCampos { get; set; }
        public virtual DbSet<tblConsulta> tblConsultas { get; set; }
        public virtual DbSet<tblEstatu> tblEstatus { get; set; }
        public virtual DbSet<tblFlujo> tblFlujos { get; set; }
        public virtual DbSet<tblFlujoTipos> tblFlujoTipos { get; set; }
        public virtual DbSet<tblFlujoTrabajo> tblFlujoTrabajos { get; set; }
        public virtual DbSet<tblImagene> tblImagenes { get; set; }
        public virtual DbSet<tblLogCat> tblLogCats { get; set; }
        public virtual DbSet<tblLogestatu> tblLogestatus { get; set; }
        public virtual DbSet<tblLogTarj> tblLogTarjs { get; set; }
        public virtual DbSet<tblNota> tblNotas { get; set; }
        public virtual DbSet<tblReport> tblReports { get; set; }
        public virtual DbSet<tblReportSecurity> tblReportSecurities { get; set; }
        public virtual DbSet<tblReportType> tblReportTypes { get; set; }
        public virtual DbSet<tblSolicitudCampos> tblSolicitudCampos { get; set; }
        public virtual DbSet<tblSolicitude> tblSolicitudes { get; set; }
        public virtual DbSet<tblSolicitudesDato> tblSolicitudesDatos { get; set; }
        public virtual DbSet<tblSolicitudReporteObjeto> tblSolicitudReporteObjetoes { get; set; }
        public virtual DbSet<tblSolUltimoLog> tblSolUltimoLogs { get; set; }
        public virtual DbSet<tblTarjSolicitude> tblTarjSolicitudes { get; set; }
        public virtual DbSet<tblUsuariosClient> tblUsuariosClients { get; set; }
        public virtual DbSet<tblUsuariosTienda> tblUsuariosTiendas { get; set; }
        public virtual DbSet<tblComplemento> tblComplementos { get; set; }
        public virtual DbSet<TblPrecalificacione> TblPrecalificaciones { get; set; }
        public virtual DbSet<IMvw_AppAppFields> IMvw_AppAppFields { get; set; }
        public virtual DbSet<IMvw_AppData> IMvw_AppData { get; set; }
        public virtual DbSet<Imvw_AppDataControlDesk> Imvw_AppDataControlDesk { get; set; }
        public virtual DbSet<IMvw_AppDataToPrint> IMvw_AppDataToPrint { get; set; }
        public virtual DbSet<IMvw_AppDatatoPrintList> IMvw_AppDatatoPrintList { get; set; }
        public virtual DbSet<IMvw_AppFieldStatus> IMvw_AppFieldStatus { get; set; }
        public virtual DbSet<IMvw_AppFollowingReport> IMvw_AppFollowingReport { get; set; }
        public virtual DbSet<IMvw_AppFollowingReportDetail> IMvw_AppFollowingReportDetail { get; set; }
        public virtual DbSet<IMvw_AppFollowingReportStore> IMvw_AppFollowingReportStore { get; set; }
        public virtual DbSet<IMvw_AppLastLog> IMvw_AppLastLog { get; set; }
        public virtual DbSet<IMvw_AppLastLogFull> IMvw_AppLastLogFull { get; set; }
        public virtual DbSet<IMvw_AppLog> IMvw_AppLog { get; set; }
        public virtual DbSet<IMvw_AppNotas> IMvw_AppNotas { get; set; }
        public virtual DbSet<IMvw_AppViewReport> IMvw_AppViewReport { get; set; }
        public virtual DbSet<IMvw_AppWorkFlow> IMvw_AppWorkFlow { get; set; }
        public virtual DbSet<IMvw_AssignedWF> IMvw_AssignedWF { get; set; }
        public virtual DbSet<IMvw_Estatus> IMvw_Estatus { get; set; }
        public virtual DbSet<IMvw_ListReports> IMvw_ListReports { get; set; }
        public virtual DbSet<IMvw_MonitorLog> IMvw_MonitorLog { get; set; }
        public virtual DbSet<IMvw_Report_DocControl> IMvw_Report_DocControl { get; set; }
        public virtual DbSet<IMvw_ReportPAGARE> IMvw_ReportPAGARE { get; set; }
        public virtual DbSet<IMvw_ReportSpec> IMvw_ReportSpec { get; set; }
        public virtual DbSet<IMvw_ReportSpecObject> IMvw_ReportSpecObject { get; set; }
        public virtual DbSet<IMvw_SolicitudesDatos> IMvw_SolicitudesDatos { get; set; }
    
        public virtual int Actualiza_Confirmado(string iDprecalificador)
        {
            var iDprecalificadorParameter = iDprecalificador != null ?
                new ObjectParameter("IDprecalificador", iDprecalificador) :
                new ObjectParameter("IDprecalificador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_Confirmado", iDprecalificadorParameter);
        }
    
        public virtual int Actualiza_Estaus(string solicitud)
        {
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_Estaus", solicitudParameter);
        }
    
        public virtual int Actualiza_PreCalificacion(string solicitud, Nullable<int> idpre, string resultado)
        {
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            var idpreParameter = idpre.HasValue ?
                new ObjectParameter("Idpre", idpre) :
                new ObjectParameter("Idpre", typeof(int));
    
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_PreCalificacion", solicitudParameter, idpreParameter, resultadoParameter);
        }
    
        public virtual int Actualiza_Promotor(string solicitud, string promotor, string resultado)
        {
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("Promotor", promotor) :
                new ObjectParameter("Promotor", typeof(string));
    
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_Promotor", solicitudParameter, promotorParameter, resultadoParameter);
        }
    
        public virtual int ActualizarPreAprobado(string resultado, Nullable<int> idSol)
        {
            var resultadoParameter = resultado != null ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(string));
    
            var idSolParameter = idSol.HasValue ?
                new ObjectParameter("IdSol", idSol) :
                new ObjectParameter("IdSol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPreAprobado", resultadoParameter, idSolParameter);
        }
    
        public virtual ObjectResult<Buscar_Pendientes_Result> Buscar_Pendientes(string tienda)
        {
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Buscar_Pendientes_Result>("Buscar_Pendientes", tiendaParameter);
        }
    
        public virtual ObjectResult<Buscar_Solicitud_Result> Buscar_Solicitud(string nombre, string apaterno, string amaterno, string fecha, string tienda)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Buscar_Solicitud_Result>("Buscar_Solicitud", nombreParameter, apaternoParameter, amaternoParameter, fechaParameter, tiendaParameter);
        }
    
        public virtual ObjectResult<Buscar_SolicitudPre_Result> Buscar_SolicitudPre(string nombre, string apaterno, string amaterno, string fecha, string tienda)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Buscar_SolicitudPre_Result>("Buscar_SolicitudPre", nombreParameter, apaternoParameter, amaternoParameter, fechaParameter, tiendaParameter);
        }
    
        public virtual ObjectResult<Buscar_SolicitudPrePro_Result> Buscar_SolicitudPrePro(string nombre, string apaterno, string amaterno, string fecha, string tienda)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Buscar_SolicitudPrePro_Result>("Buscar_SolicitudPrePro", nombreParameter, apaternoParameter, amaternoParameter, fechaParameter, tiendaParameter);
        }
    
        public virtual ObjectResult<Buscar_SolicitudPrePro2_Result> Buscar_SolicitudPrePro2(string nombre, string apaterno, string amaterno, string fecha, string tienda)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Buscar_SolicitudPrePro2_Result>("Buscar_SolicitudPrePro2", nombreParameter, apaternoParameter, amaternoParameter, fechaParameter, tiendaParameter);
        }
    
        public virtual ObjectResult<exec_IMspr_vw_ReportSpec__DEMOUSERVF___300_Result> exec_IMspr_vw_ReportSpec__DEMOUSERVF___300(string sUsuario, Nullable<int> iDSolicitud)
        {
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<exec_IMspr_vw_ReportSpec__DEMOUSERVF___300_Result>("exec_IMspr_vw_ReportSpec__DEMOUSERVF___300", sUsuarioParameter, iDSolicitudParameter);
        }
    
        public virtual int Getsolicitudes(string fechadesde, string fechahasta, string estatus, string credito, string cliente, string idsolicitud)
        {
            var fechadesdeParameter = fechadesde != null ?
                new ObjectParameter("fechadesde", fechadesde) :
                new ObjectParameter("fechadesde", typeof(string));
    
            var fechahastaParameter = fechahasta != null ?
                new ObjectParameter("fechahasta", fechahasta) :
                new ObjectParameter("fechahasta", typeof(string));
    
            var estatusParameter = estatus != null ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(string));
    
            var creditoParameter = credito != null ?
                new ObjectParameter("credito", credito) :
                new ObjectParameter("credito", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(string));
    
            var idsolicitudParameter = idsolicitud != null ?
                new ObjectParameter("idsolicitud", idsolicitud) :
                new ObjectParameter("idsolicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Getsolicitudes", fechadesdeParameter, fechahastaParameter, estatusParameter, creditoParameter, clienteParameter, idsolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_CardManager_Result> IMspr_CardManager(Nullable<int> iAccion, Nullable<int> iDSolicitud, string sUsuario, byte[] bTarjeta, string sDigitosFin, string sSegmento, string sDivision)
        {
            var iAccionParameter = iAccion.HasValue ?
                new ObjectParameter("iAccion", iAccion) :
                new ObjectParameter("iAccion", typeof(int));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            var bTarjetaParameter = bTarjeta != null ?
                new ObjectParameter("bTarjeta", bTarjeta) :
                new ObjectParameter("bTarjeta", typeof(byte[]));
    
            var sDigitosFinParameter = sDigitosFin != null ?
                new ObjectParameter("sDigitosFin", sDigitosFin) :
                new ObjectParameter("sDigitosFin", typeof(string));
    
            var sSegmentoParameter = sSegmento != null ?
                new ObjectParameter("sSegmento", sSegmento) :
                new ObjectParameter("sSegmento", typeof(string));
    
            var sDivisionParameter = sDivision != null ?
                new ObjectParameter("sDivision", sDivision) :
                new ObjectParameter("sDivision", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_CardManager_Result>("IMspr_CardManager", iAccionParameter, iDSolicitudParameter, sUsuarioParameter, bTarjetaParameter, sDigitosFinParameter, sSegmentoParameter, sDivisionParameter);
        }
    
        public virtual ObjectResult<string> IMspr_ChgLogEstatus(Nullable<int> iIDSolicitud, string sLogEstatusNew, string sLogSuperEstatus, string sUsuario)
        {
            var iIDSolicitudParameter = iIDSolicitud.HasValue ?
                new ObjectParameter("iIDSolicitud", iIDSolicitud) :
                new ObjectParameter("iIDSolicitud", typeof(int));
    
            var sLogEstatusNewParameter = sLogEstatusNew != null ?
                new ObjectParameter("sLogEstatusNew", sLogEstatusNew) :
                new ObjectParameter("sLogEstatusNew", typeof(string));
    
            var sLogSuperEstatusParameter = sLogSuperEstatus != null ?
                new ObjectParameter("sLogSuperEstatus", sLogSuperEstatus) :
                new ObjectParameter("sLogSuperEstatus", typeof(string));
    
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IMspr_ChgLogEstatus", iIDSolicitudParameter, sLogEstatusNewParameter, sLogSuperEstatusParameter, sUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IMspr_ChgTypeApp(Nullable<int> iIDSolicitud, string sTipoCredito)
        {
            var iIDSolicitudParameter = iIDSolicitud.HasValue ?
                new ObjectParameter("iIDSolicitud", iIDSolicitud) :
                new ObjectParameter("iIDSolicitud", typeof(int));
    
            var sTipoCreditoParameter = sTipoCredito != null ?
                new ObjectParameter("sTipoCredito", sTipoCredito) :
                new ObjectParameter("sTipoCredito", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IMspr_ChgTypeApp", iIDSolicitudParameter, sTipoCreditoParameter);
        }
    
        public virtual ObjectResult<IMspr_GetAppData_Result> IMspr_GetAppData(string usuario, Nullable<int> iDSolicitud, string noFolio, string rFC)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var noFolioParameter = noFolio != null ?
                new ObjectParameter("NoFolio", noFolio) :
                new ObjectParameter("NoFolio", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetAppData_Result>("IMspr_GetAppData", usuarioParameter, iDSolicitudParameter, noFolioParameter, rFCParameter);
        }
    
        public virtual ObjectResult<IMspr_GetAppDataMonitoring_Result> IMspr_GetAppDataMonitoring(string usuario, string estatus, Nullable<System.DateTime> fechaMonitor)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var estatusParameter = estatus != null ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(string));
    
            var fechaMonitorParameter = fechaMonitor.HasValue ?
                new ObjectParameter("FechaMonitor", fechaMonitor) :
                new ObjectParameter("FechaMonitor", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetAppDataMonitoring_Result>("IMspr_GetAppDataMonitoring", usuarioParameter, estatusParameter, fechaMonitorParameter);
        }
    
        public virtual ObjectResult<IMspr_GetAppDataResume_Result> IMspr_GetAppDataResume(string usuario, Nullable<int> iDSolicitud, string noFolio, string rFC)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var noFolioParameter = noFolio != null ?
                new ObjectParameter("NoFolio", noFolio) :
                new ObjectParameter("NoFolio", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetAppDataResume_Result>("IMspr_GetAppDataResume", usuarioParameter, iDSolicitudParameter, noFolioParameter, rFCParameter);
        }
    
        public virtual ObjectResult<IMspr_GetComplementos_Result> IMspr_GetComplementos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetComplementos_Result>("IMspr_GetComplementos");
        }
    
        public virtual ObjectResult<IMspr_GetConsLog_Result> IMspr_GetConsLog(Nullable<int> iDSolicitud)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetConsLog_Result>("IMspr_GetConsLog", iDSolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetEstatus_Result> IMspr_GetEstatus(string sUsuario)
        {
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetEstatus_Result>("IMspr_GetEstatus", sUsuarioParameter);
        }
    
        public virtual ObjectResult<string> IMspr_GetEstatuSolicitud(Nullable<int> iIDSolicitud)
        {
            var iIDSolicitudParameter = iIDSolicitud.HasValue ?
                new ObjectParameter("iIDSolicitud", iIDSolicitud) :
                new ObjectParameter("iIDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IMspr_GetEstatuSolicitud", iIDSolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetLogEstatus_Result> IMspr_GetLogEstatus(Nullable<int> iDSolicitud)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetLogEstatus_Result>("IMspr_GetLogEstatus", iDSolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetLogEstatusApp_Result> IMspr_GetLogEstatusApp(Nullable<int> iDSolicitud)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetLogEstatusApp_Result>("IMspr_GetLogEstatusApp", iDSolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetNota_Result> IMspr_GetNota(Nullable<int> iDSolicitud, Nullable<int> iDNota)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var iDNotaParameter = iDNota.HasValue ?
                new ObjectParameter("IDNota", iDNota) :
                new ObjectParameter("IDNota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetNota_Result>("IMspr_GetNota", iDSolicitudParameter, iDNotaParameter);
        }
    
        public virtual ObjectResult<string> IMspr_GetNotas(string solicitud)
        {
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IMspr_GetNotas", solicitudParameter);
        }
    
        public virtual ObjectResult<string> IMspr_GetNotas_Usuario(string solicitud)
        {
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IMspr_GetNotas_Usuario", solicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetReportes_Result> IMspr_GetReportes(string desde, string hasta, string nombre, string apaterno, string amaterno, string promotor, string descripcion, string tienda, string idsolicitud)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var idsolicitudParameter = idsolicitud != null ?
                new ObjectParameter("idsolicitud", idsolicitud) :
                new ObjectParameter("idsolicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetReportes_Result>("IMspr_GetReportes", desdeParameter, hastaParameter, nombreParameter, apaternoParameter, amaternoParameter, promotorParameter, descripcionParameter, tiendaParameter, idsolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetReportes_Estatus_Result> IMspr_GetReportes_Estatus(string desde, string hasta, string nombre, string apaterno, string amaterno, string promotor, string descripcion, string tienda, string idsolicitud)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var idsolicitudParameter = idsolicitud != null ?
                new ObjectParameter("idsolicitud", idsolicitud) :
                new ObjectParameter("idsolicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetReportes_Estatus_Result>("IMspr_GetReportes_Estatus", desdeParameter, hastaParameter, nombreParameter, apaternoParameter, amaternoParameter, promotorParameter, descripcionParameter, tiendaParameter, idsolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetReportes_Estatus_Descripcion_Result> IMspr_GetReportes_Estatus_Descripcion(string desde, string hasta, string nombre, string apaterno, string amaterno, string promotor, string descripcion, string tienda, string idsolicitud)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var idsolicitudParameter = idsolicitud != null ?
                new ObjectParameter("idsolicitud", idsolicitud) :
                new ObjectParameter("idsolicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetReportes_Estatus_Descripcion_Result>("IMspr_GetReportes_Estatus_Descripcion", desdeParameter, hastaParameter, nombreParameter, apaternoParameter, amaternoParameter, promotorParameter, descripcionParameter, tiendaParameter, idsolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetReportes_Total_Tienda_Result> IMspr_GetReportes_Total_Tienda(string desde, string hasta, string nombre, string apaterno, string amaterno, string promotor, string descripcion, string tienda, string idsolicitud)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apaternoParameter = apaterno != null ?
                new ObjectParameter("apaterno", apaterno) :
                new ObjectParameter("apaterno", typeof(string));
    
            var amaternoParameter = amaterno != null ?
                new ObjectParameter("amaterno", amaterno) :
                new ObjectParameter("amaterno", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var idsolicitudParameter = idsolicitud != null ?
                new ObjectParameter("idsolicitud", idsolicitud) :
                new ObjectParameter("idsolicitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetReportes_Total_Tienda_Result>("IMspr_GetReportes_Total_Tienda", desdeParameter, hastaParameter, nombreParameter, apaternoParameter, amaternoParameter, promotorParameter, descripcionParameter, tiendaParameter, idsolicitudParameter);
        }
    
        public virtual ObjectResult<IMspr_GetStore_Result> IMspr_GetStore(string sUser)
        {
            var sUserParameter = sUser != null ?
                new ObjectParameter("sUser", sUser) :
                new ObjectParameter("sUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_GetStore_Result>("IMspr_GetStore", sUserParameter);
        }
    
        public virtual ObjectResult<IMspr_REPORTrestantes_Result> IMspr_REPORTrestantes(Nullable<System.DateTime> dtFechaInical, Nullable<System.DateTime> dtFechaFinal)
        {
            var dtFechaInicalParameter = dtFechaInical.HasValue ?
                new ObjectParameter("dtFechaInical", dtFechaInical) :
                new ObjectParameter("dtFechaInical", typeof(System.DateTime));
    
            var dtFechaFinalParameter = dtFechaFinal.HasValue ?
                new ObjectParameter("dtFechaFinal", dtFechaFinal) :
                new ObjectParameter("dtFechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_REPORTrestantes_Result>("IMspr_REPORTrestantes", dtFechaInicalParameter, dtFechaFinalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IMspr_SetAppData(string noFolio, string rFC, string apellidoPaterno, string apellidoMaterno, string nombres, Nullable<System.DateTime> fecha, string estatusActual, string tipoCredito, string tienda, string sUsuario)
        {
            var noFolioParameter = noFolio != null ?
                new ObjectParameter("NoFolio", noFolio) :
                new ObjectParameter("NoFolio", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var estatusActualParameter = estatusActual != null ?
                new ObjectParameter("EstatusActual", estatusActual) :
                new ObjectParameter("EstatusActual", typeof(string));
    
            var tipoCreditoParameter = tipoCredito != null ?
                new ObjectParameter("TipoCredito", tipoCredito) :
                new ObjectParameter("TipoCredito", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IMspr_SetAppData", noFolioParameter, rFCParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, fechaParameter, estatusActualParameter, tipoCreditoParameter, tiendaParameter, sUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IMspr_SetAppDataComplete(Nullable<int> iDSolicitud, string tienda, string promotor, string apellidoPaterno, string apellidoMaterno, string nombre, Nullable<bool> tipoCredito, Nullable<bool> sexo, Nullable<bool> nacionalidad, string calleDomicilioActual, string noExterior, string noInterior, string cruzacon, string colonia, string municipio, string estado, Nullable<int> cP, Nullable<int> tiempoVivirDomicilioAA, Nullable<int> tiempoVivirDomicilioMM, Nullable<int> tiempoDomicilioAnteriorAA, Nullable<int> tiempoDomicilioAnteriorMM, string telefonoCasa, string telefonoOficina, string extension, string telefonoCelular, string eMail, string casa, Nullable<decimal> pagoMensual, Nullable<int> fechaNacimientoDD, Nullable<int> fechaNacimientoMM, Nullable<int> fechaNacimientoAA, string rFC, string estadoCivil, Nullable<int> noDependientes, string nombreSolteroConyuge, string conyugeTelefonoCelular, string conyugeEMail, Nullable<int> conyugeFechaNacimientoDD, Nullable<int> conyugeFechaNacimientoMM, Nullable<int> conyugeFechaNacimientoAA, string conyugeRFC, string nombreEmpresa, string puesto, string giro, string sector, string caracter, Nullable<int> antiguedadAA, Nullable<int> antiguedadMM, Nullable<decimal> ingresosComprobablessueldo, Nullable<decimal> ingresosComprobablesConyuge, Nullable<decimal> ingresosComprobablesPadres, Nullable<decimal> ingresosComprobablesOtros, Nullable<decimal> ingresosComprobablesTotal, string escolaridad, string empleoAnteriorEmpresa, Nullable<int> empleoAnteriorAntiguedadAA, Nullable<int> empleoAnteriorAntiguedadMM, string empleoAnteriorPuesto, string ref1Institucion, Nullable<int> ref1Tipo, string ref1NodeCta, string ref2Institucion, Nullable<int> ref2Tipo, string ref2NodeCta, string refPer1Nombre, string refPer1Telefono, string refPer2Nombre, string refPer2Telefono, string refPer3Nombre, string refPer3Telefono, Nullable<int> edoCuenta, string nombreEmpresaConyuge, string puestoConyuge, string domicilioEmpresaConyuge, string domicilioEmpresa, string refPer1Domicilio, string refPer2Domicilio, string refPer3Domicilio, string tarjAdic1Nombre, string tarjAdic1Telefono, string tarjAdic2Nombre, string tarjAdic2Telefono, string tarjAdic3Nombre, string tarjAdic3Telefono, Nullable<decimal> montoCredito, Nullable<bool> tradicional, Nullable<bool> pagosFijos, string sUsuario, string estatusActual)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("Promotor", promotor) :
                new ObjectParameter("Promotor", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoCreditoParameter = tipoCredito.HasValue ?
                new ObjectParameter("TipoCredito", tipoCredito) :
                new ObjectParameter("TipoCredito", typeof(bool));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(bool));
    
            var nacionalidadParameter = nacionalidad.HasValue ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(bool));
    
            var calleDomicilioActualParameter = calleDomicilioActual != null ?
                new ObjectParameter("CalleDomicilioActual", calleDomicilioActual) :
                new ObjectParameter("CalleDomicilioActual", typeof(string));
    
            var noExteriorParameter = noExterior != null ?
                new ObjectParameter("NoExterior", noExterior) :
                new ObjectParameter("NoExterior", typeof(string));
    
            var noInteriorParameter = noInterior != null ?
                new ObjectParameter("NoInterior", noInterior) :
                new ObjectParameter("NoInterior", typeof(string));
    
            var cruzaconParameter = cruzacon != null ?
                new ObjectParameter("Cruzacon", cruzacon) :
                new ObjectParameter("Cruzacon", typeof(string));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(string));
    
            var municipioParameter = municipio != null ?
                new ObjectParameter("Municipio", municipio) :
                new ObjectParameter("Municipio", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var cPParameter = cP.HasValue ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(int));
    
            var tiempoVivirDomicilioAAParameter = tiempoVivirDomicilioAA.HasValue ?
                new ObjectParameter("TiempoVivirDomicilioAA", tiempoVivirDomicilioAA) :
                new ObjectParameter("TiempoVivirDomicilioAA", typeof(int));
    
            var tiempoVivirDomicilioMMParameter = tiempoVivirDomicilioMM.HasValue ?
                new ObjectParameter("TiempoVivirDomicilioMM", tiempoVivirDomicilioMM) :
                new ObjectParameter("TiempoVivirDomicilioMM", typeof(int));
    
            var tiempoDomicilioAnteriorAAParameter = tiempoDomicilioAnteriorAA.HasValue ?
                new ObjectParameter("TiempoDomicilioAnteriorAA", tiempoDomicilioAnteriorAA) :
                new ObjectParameter("TiempoDomicilioAnteriorAA", typeof(int));
    
            var tiempoDomicilioAnteriorMMParameter = tiempoDomicilioAnteriorMM.HasValue ?
                new ObjectParameter("TiempoDomicilioAnteriorMM", tiempoDomicilioAnteriorMM) :
                new ObjectParameter("TiempoDomicilioAnteriorMM", typeof(int));
    
            var telefonoCasaParameter = telefonoCasa != null ?
                new ObjectParameter("TelefonoCasa", telefonoCasa) :
                new ObjectParameter("TelefonoCasa", typeof(string));
    
            var telefonoOficinaParameter = telefonoOficina != null ?
                new ObjectParameter("TelefonoOficina", telefonoOficina) :
                new ObjectParameter("TelefonoOficina", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var telefonoCelularParameter = telefonoCelular != null ?
                new ObjectParameter("TelefonoCelular", telefonoCelular) :
                new ObjectParameter("TelefonoCelular", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("EMail", eMail) :
                new ObjectParameter("EMail", typeof(string));
    
            var casaParameter = casa != null ?
                new ObjectParameter("Casa", casa) :
                new ObjectParameter("Casa", typeof(string));
    
            var pagoMensualParameter = pagoMensual.HasValue ?
                new ObjectParameter("PagoMensual", pagoMensual) :
                new ObjectParameter("PagoMensual", typeof(decimal));
    
            var fechaNacimientoDDParameter = fechaNacimientoDD.HasValue ?
                new ObjectParameter("FechaNacimientoDD", fechaNacimientoDD) :
                new ObjectParameter("FechaNacimientoDD", typeof(int));
    
            var fechaNacimientoMMParameter = fechaNacimientoMM.HasValue ?
                new ObjectParameter("FechaNacimientoMM", fechaNacimientoMM) :
                new ObjectParameter("FechaNacimientoMM", typeof(int));
    
            var fechaNacimientoAAParameter = fechaNacimientoAA.HasValue ?
                new ObjectParameter("FechaNacimientoAA", fechaNacimientoAA) :
                new ObjectParameter("FechaNacimientoAA", typeof(int));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var noDependientesParameter = noDependientes.HasValue ?
                new ObjectParameter("NoDependientes", noDependientes) :
                new ObjectParameter("NoDependientes", typeof(int));
    
            var nombreSolteroConyugeParameter = nombreSolteroConyuge != null ?
                new ObjectParameter("NombreSolteroConyuge", nombreSolteroConyuge) :
                new ObjectParameter("NombreSolteroConyuge", typeof(string));
    
            var conyugeTelefonoCelularParameter = conyugeTelefonoCelular != null ?
                new ObjectParameter("ConyugeTelefonoCelular", conyugeTelefonoCelular) :
                new ObjectParameter("ConyugeTelefonoCelular", typeof(string));
    
            var conyugeEMailParameter = conyugeEMail != null ?
                new ObjectParameter("ConyugeEMail", conyugeEMail) :
                new ObjectParameter("ConyugeEMail", typeof(string));
    
            var conyugeFechaNacimientoDDParameter = conyugeFechaNacimientoDD.HasValue ?
                new ObjectParameter("ConyugeFechaNacimientoDD", conyugeFechaNacimientoDD) :
                new ObjectParameter("ConyugeFechaNacimientoDD", typeof(int));
    
            var conyugeFechaNacimientoMMParameter = conyugeFechaNacimientoMM.HasValue ?
                new ObjectParameter("ConyugeFechaNacimientoMM", conyugeFechaNacimientoMM) :
                new ObjectParameter("ConyugeFechaNacimientoMM", typeof(int));
    
            var conyugeFechaNacimientoAAParameter = conyugeFechaNacimientoAA.HasValue ?
                new ObjectParameter("ConyugeFechaNacimientoAA", conyugeFechaNacimientoAA) :
                new ObjectParameter("ConyugeFechaNacimientoAA", typeof(int));
    
            var conyugeRFCParameter = conyugeRFC != null ?
                new ObjectParameter("ConyugeRFC", conyugeRFC) :
                new ObjectParameter("ConyugeRFC", typeof(string));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("NombreEmpresa", nombreEmpresa) :
                new ObjectParameter("NombreEmpresa", typeof(string));
    
            var puestoParameter = puesto != null ?
                new ObjectParameter("Puesto", puesto) :
                new ObjectParameter("Puesto", typeof(string));
    
            var giroParameter = giro != null ?
                new ObjectParameter("Giro", giro) :
                new ObjectParameter("Giro", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var caracterParameter = caracter != null ?
                new ObjectParameter("Caracter", caracter) :
                new ObjectParameter("Caracter", typeof(string));
    
            var antiguedadAAParameter = antiguedadAA.HasValue ?
                new ObjectParameter("AntiguedadAA", antiguedadAA) :
                new ObjectParameter("AntiguedadAA", typeof(int));
    
            var antiguedadMMParameter = antiguedadMM.HasValue ?
                new ObjectParameter("AntiguedadMM", antiguedadMM) :
                new ObjectParameter("AntiguedadMM", typeof(int));
    
            var ingresosComprobablessueldoParameter = ingresosComprobablessueldo.HasValue ?
                new ObjectParameter("IngresosComprobablessueldo", ingresosComprobablessueldo) :
                new ObjectParameter("IngresosComprobablessueldo", typeof(decimal));
    
            var ingresosComprobablesConyugeParameter = ingresosComprobablesConyuge.HasValue ?
                new ObjectParameter("IngresosComprobablesConyuge", ingresosComprobablesConyuge) :
                new ObjectParameter("IngresosComprobablesConyuge", typeof(decimal));
    
            var ingresosComprobablesPadresParameter = ingresosComprobablesPadres.HasValue ?
                new ObjectParameter("IngresosComprobablesPadres", ingresosComprobablesPadres) :
                new ObjectParameter("IngresosComprobablesPadres", typeof(decimal));
    
            var ingresosComprobablesOtrosParameter = ingresosComprobablesOtros.HasValue ?
                new ObjectParameter("IngresosComprobablesOtros", ingresosComprobablesOtros) :
                new ObjectParameter("IngresosComprobablesOtros", typeof(decimal));
    
            var ingresosComprobablesTotalParameter = ingresosComprobablesTotal.HasValue ?
                new ObjectParameter("IngresosComprobablesTotal", ingresosComprobablesTotal) :
                new ObjectParameter("IngresosComprobablesTotal", typeof(decimal));
    
            var escolaridadParameter = escolaridad != null ?
                new ObjectParameter("Escolaridad", escolaridad) :
                new ObjectParameter("Escolaridad", typeof(string));
    
            var empleoAnteriorEmpresaParameter = empleoAnteriorEmpresa != null ?
                new ObjectParameter("EmpleoAnteriorEmpresa", empleoAnteriorEmpresa) :
                new ObjectParameter("EmpleoAnteriorEmpresa", typeof(string));
    
            var empleoAnteriorAntiguedadAAParameter = empleoAnteriorAntiguedadAA.HasValue ?
                new ObjectParameter("EmpleoAnteriorAntiguedadAA", empleoAnteriorAntiguedadAA) :
                new ObjectParameter("EmpleoAnteriorAntiguedadAA", typeof(int));
    
            var empleoAnteriorAntiguedadMMParameter = empleoAnteriorAntiguedadMM.HasValue ?
                new ObjectParameter("EmpleoAnteriorAntiguedadMM", empleoAnteriorAntiguedadMM) :
                new ObjectParameter("EmpleoAnteriorAntiguedadMM", typeof(int));
    
            var empleoAnteriorPuestoParameter = empleoAnteriorPuesto != null ?
                new ObjectParameter("EmpleoAnteriorPuesto", empleoAnteriorPuesto) :
                new ObjectParameter("EmpleoAnteriorPuesto", typeof(string));
    
            var ref1InstitucionParameter = ref1Institucion != null ?
                new ObjectParameter("Ref1Institucion", ref1Institucion) :
                new ObjectParameter("Ref1Institucion", typeof(string));
    
            var ref1TipoParameter = ref1Tipo.HasValue ?
                new ObjectParameter("Ref1Tipo", ref1Tipo) :
                new ObjectParameter("Ref1Tipo", typeof(int));
    
            var ref1NodeCtaParameter = ref1NodeCta != null ?
                new ObjectParameter("Ref1NodeCta", ref1NodeCta) :
                new ObjectParameter("Ref1NodeCta", typeof(string));
    
            var ref2InstitucionParameter = ref2Institucion != null ?
                new ObjectParameter("Ref2Institucion", ref2Institucion) :
                new ObjectParameter("Ref2Institucion", typeof(string));
    
            var ref2TipoParameter = ref2Tipo.HasValue ?
                new ObjectParameter("Ref2Tipo", ref2Tipo) :
                new ObjectParameter("Ref2Tipo", typeof(int));
    
            var ref2NodeCtaParameter = ref2NodeCta != null ?
                new ObjectParameter("Ref2NodeCta", ref2NodeCta) :
                new ObjectParameter("Ref2NodeCta", typeof(string));
    
            var refPer1NombreParameter = refPer1Nombre != null ?
                new ObjectParameter("RefPer1Nombre", refPer1Nombre) :
                new ObjectParameter("RefPer1Nombre", typeof(string));
    
            var refPer1TelefonoParameter = refPer1Telefono != null ?
                new ObjectParameter("RefPer1Telefono", refPer1Telefono) :
                new ObjectParameter("RefPer1Telefono", typeof(string));
    
            var refPer2NombreParameter = refPer2Nombre != null ?
                new ObjectParameter("RefPer2Nombre", refPer2Nombre) :
                new ObjectParameter("RefPer2Nombre", typeof(string));
    
            var refPer2TelefonoParameter = refPer2Telefono != null ?
                new ObjectParameter("RefPer2Telefono", refPer2Telefono) :
                new ObjectParameter("RefPer2Telefono", typeof(string));
    
            var refPer3NombreParameter = refPer3Nombre != null ?
                new ObjectParameter("RefPer3Nombre", refPer3Nombre) :
                new ObjectParameter("RefPer3Nombre", typeof(string));
    
            var refPer3TelefonoParameter = refPer3Telefono != null ?
                new ObjectParameter("RefPer3Telefono", refPer3Telefono) :
                new ObjectParameter("RefPer3Telefono", typeof(string));
    
            var edoCuentaParameter = edoCuenta.HasValue ?
                new ObjectParameter("EdoCuenta", edoCuenta) :
                new ObjectParameter("EdoCuenta", typeof(int));
    
            var nombreEmpresaConyugeParameter = nombreEmpresaConyuge != null ?
                new ObjectParameter("NombreEmpresaConyuge", nombreEmpresaConyuge) :
                new ObjectParameter("NombreEmpresaConyuge", typeof(string));
    
            var puestoConyugeParameter = puestoConyuge != null ?
                new ObjectParameter("PuestoConyuge", puestoConyuge) :
                new ObjectParameter("PuestoConyuge", typeof(string));
    
            var domicilioEmpresaConyugeParameter = domicilioEmpresaConyuge != null ?
                new ObjectParameter("DomicilioEmpresaConyuge", domicilioEmpresaConyuge) :
                new ObjectParameter("DomicilioEmpresaConyuge", typeof(string));
    
            var domicilioEmpresaParameter = domicilioEmpresa != null ?
                new ObjectParameter("DomicilioEmpresa", domicilioEmpresa) :
                new ObjectParameter("DomicilioEmpresa", typeof(string));
    
            var refPer1DomicilioParameter = refPer1Domicilio != null ?
                new ObjectParameter("RefPer1Domicilio", refPer1Domicilio) :
                new ObjectParameter("RefPer1Domicilio", typeof(string));
    
            var refPer2DomicilioParameter = refPer2Domicilio != null ?
                new ObjectParameter("RefPer2Domicilio", refPer2Domicilio) :
                new ObjectParameter("RefPer2Domicilio", typeof(string));
    
            var refPer3DomicilioParameter = refPer3Domicilio != null ?
                new ObjectParameter("RefPer3Domicilio", refPer3Domicilio) :
                new ObjectParameter("RefPer3Domicilio", typeof(string));
    
            var tarjAdic1NombreParameter = tarjAdic1Nombre != null ?
                new ObjectParameter("TarjAdic1Nombre", tarjAdic1Nombre) :
                new ObjectParameter("TarjAdic1Nombre", typeof(string));
    
            var tarjAdic1TelefonoParameter = tarjAdic1Telefono != null ?
                new ObjectParameter("TarjAdic1Telefono", tarjAdic1Telefono) :
                new ObjectParameter("TarjAdic1Telefono", typeof(string));
    
            var tarjAdic2NombreParameter = tarjAdic2Nombre != null ?
                new ObjectParameter("TarjAdic2Nombre", tarjAdic2Nombre) :
                new ObjectParameter("TarjAdic2Nombre", typeof(string));
    
            var tarjAdic2TelefonoParameter = tarjAdic2Telefono != null ?
                new ObjectParameter("TarjAdic2Telefono", tarjAdic2Telefono) :
                new ObjectParameter("TarjAdic2Telefono", typeof(string));
    
            var tarjAdic3NombreParameter = tarjAdic3Nombre != null ?
                new ObjectParameter("TarjAdic3Nombre", tarjAdic3Nombre) :
                new ObjectParameter("TarjAdic3Nombre", typeof(string));
    
            var tarjAdic3TelefonoParameter = tarjAdic3Telefono != null ?
                new ObjectParameter("TarjAdic3Telefono", tarjAdic3Telefono) :
                new ObjectParameter("TarjAdic3Telefono", typeof(string));
    
            var montoCreditoParameter = montoCredito.HasValue ?
                new ObjectParameter("MontoCredito", montoCredito) :
                new ObjectParameter("MontoCredito", typeof(decimal));
    
            var tradicionalParameter = tradicional.HasValue ?
                new ObjectParameter("Tradicional", tradicional) :
                new ObjectParameter("Tradicional", typeof(bool));
    
            var pagosFijosParameter = pagosFijos.HasValue ?
                new ObjectParameter("PagosFijos", pagosFijos) :
                new ObjectParameter("PagosFijos", typeof(bool));
    
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            var estatusActualParameter = estatusActual != null ?
                new ObjectParameter("EstatusActual", estatusActual) :
                new ObjectParameter("EstatusActual", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IMspr_SetAppDataComplete", iDSolicitudParameter, tiendaParameter, promotorParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreParameter, tipoCreditoParameter, sexoParameter, nacionalidadParameter, calleDomicilioActualParameter, noExteriorParameter, noInteriorParameter, cruzaconParameter, coloniaParameter, municipioParameter, estadoParameter, cPParameter, tiempoVivirDomicilioAAParameter, tiempoVivirDomicilioMMParameter, tiempoDomicilioAnteriorAAParameter, tiempoDomicilioAnteriorMMParameter, telefonoCasaParameter, telefonoOficinaParameter, extensionParameter, telefonoCelularParameter, eMailParameter, casaParameter, pagoMensualParameter, fechaNacimientoDDParameter, fechaNacimientoMMParameter, fechaNacimientoAAParameter, rFCParameter, estadoCivilParameter, noDependientesParameter, nombreSolteroConyugeParameter, conyugeTelefonoCelularParameter, conyugeEMailParameter, conyugeFechaNacimientoDDParameter, conyugeFechaNacimientoMMParameter, conyugeFechaNacimientoAAParameter, conyugeRFCParameter, nombreEmpresaParameter, puestoParameter, giroParameter, sectorParameter, caracterParameter, antiguedadAAParameter, antiguedadMMParameter, ingresosComprobablessueldoParameter, ingresosComprobablesConyugeParameter, ingresosComprobablesPadresParameter, ingresosComprobablesOtrosParameter, ingresosComprobablesTotalParameter, escolaridadParameter, empleoAnteriorEmpresaParameter, empleoAnteriorAntiguedadAAParameter, empleoAnteriorAntiguedadMMParameter, empleoAnteriorPuestoParameter, ref1InstitucionParameter, ref1TipoParameter, ref1NodeCtaParameter, ref2InstitucionParameter, ref2TipoParameter, ref2NodeCtaParameter, refPer1NombreParameter, refPer1TelefonoParameter, refPer2NombreParameter, refPer2TelefonoParameter, refPer3NombreParameter, refPer3TelefonoParameter, edoCuentaParameter, nombreEmpresaConyugeParameter, puestoConyugeParameter, domicilioEmpresaConyugeParameter, domicilioEmpresaParameter, refPer1DomicilioParameter, refPer2DomicilioParameter, refPer3DomicilioParameter, tarjAdic1NombreParameter, tarjAdic1TelefonoParameter, tarjAdic2NombreParameter, tarjAdic2TelefonoParameter, tarjAdic3NombreParameter, tarjAdic3TelefonoParameter, montoCreditoParameter, tradicionalParameter, pagosFijosParameter, sUsuarioParameter, estatusActualParameter);
        }
    
        public virtual int IMspr_SetAppDataUpdate(Nullable<int> iDSolicitud, string noFolio, string rFC, string apellidoPaterno, string apellidoMaterno, string nombres, string tipoCredito, string tienda, string sUsuario)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var noFolioParameter = noFolio != null ?
                new ObjectParameter("NoFolio", noFolio) :
                new ObjectParameter("NoFolio", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var tipoCreditoParameter = tipoCredito != null ?
                new ObjectParameter("TipoCredito", tipoCredito) :
                new ObjectParameter("TipoCredito", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("Tienda", tienda) :
                new ObjectParameter("Tienda", typeof(string));
    
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IMspr_SetAppDataUpdate", iDSolicitudParameter, noFolioParameter, rFCParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, tipoCreditoParameter, tiendaParameter, sUsuarioParameter);
        }
    
        public virtual int IMspr_SetAppField(Nullable<int> iIDSolicitud, string sEstatus, Nullable<int> iCampo, string sValue)
        {
            var iIDSolicitudParameter = iIDSolicitud.HasValue ?
                new ObjectParameter("iIDSolicitud", iIDSolicitud) :
                new ObjectParameter("iIDSolicitud", typeof(int));
    
            var sEstatusParameter = sEstatus != null ?
                new ObjectParameter("sEstatus", sEstatus) :
                new ObjectParameter("sEstatus", typeof(string));
    
            var iCampoParameter = iCampo.HasValue ?
                new ObjectParameter("iCampo", iCampo) :
                new ObjectParameter("iCampo", typeof(int));
    
            var sValueParameter = sValue != null ?
                new ObjectParameter("sValue", sValue) :
                new ObjectParameter("sValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IMspr_SetAppField", iIDSolicitudParameter, sEstatusParameter, iCampoParameter, sValueParameter);
        }
    
        public virtual int IMspr_SetFinished(Nullable<int> iDSolicitud, string sEstatus, Nullable<int> iFinished)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var sEstatusParameter = sEstatus != null ?
                new ObjectParameter("sEstatus", sEstatus) :
                new ObjectParameter("sEstatus", typeof(string));
    
            var iFinishedParameter = iFinished.HasValue ?
                new ObjectParameter("iFinished", iFinished) :
                new ObjectParameter("iFinished", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IMspr_SetFinished", iDSolicitudParameter, sEstatusParameter, iFinishedParameter);
        }
    
        public virtual ObjectResult<string> IMspr_SetImageData(Nullable<int> iDSolicitud, string tipoImagen, byte[] imagen, string sUsuario)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var tipoImagenParameter = tipoImagen != null ?
                new ObjectParameter("TipoImagen", tipoImagen) :
                new ObjectParameter("TipoImagen", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IMspr_SetImageData", iDSolicitudParameter, tipoImagenParameter, imagenParameter, sUsuarioParameter);
        }
    
        public virtual int IMspr_SetNota(Nullable<int> iDSolicitud, Nullable<int> iDNota, string sNota)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var iDNotaParameter = iDNota.HasValue ?
                new ObjectParameter("IDNota", iDNota) :
                new ObjectParameter("IDNota", typeof(int));
    
            var sNotaParameter = sNota != null ?
                new ObjectParameter("sNota", sNota) :
                new ObjectParameter("sNota", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IMspr_SetNota", iDSolicitudParameter, iDNotaParameter, sNotaParameter);
        }
    
        public virtual ObjectResult<IMspr_SetReportObject_Result> IMspr_SetReportObject(Nullable<int> iDReport, Nullable<int> iDSolicitud, byte[] fileObject)
        {
            var iDReportParameter = iDReport.HasValue ?
                new ObjectParameter("IDReport", iDReport) :
                new ObjectParameter("IDReport", typeof(int));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var fileObjectParameter = fileObject != null ?
                new ObjectParameter("FileObject", fileObject) :
                new ObjectParameter("FileObject", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_SetReportObject_Result>("IMspr_SetReportObject", iDReportParameter, iDSolicitudParameter, fileObjectParameter);
        }
    
        public virtual int IMspr_UpdateComplementos(Nullable<int> iD, Nullable<int> idSolicitud, Nullable<bool> revisada, string reviso, Nullable<System.DateTime> fecha)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            var revisadaParameter = revisada.HasValue ?
                new ObjectParameter("Revisada", revisada) :
                new ObjectParameter("Revisada", typeof(bool));
    
            var revisoParameter = reviso != null ?
                new ObjectParameter("Reviso", reviso) :
                new ObjectParameter("Reviso", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IMspr_UpdateComplementos", iDParameter, idSolicitudParameter, revisadaParameter, revisoParameter, fechaParameter);
        }
    
        public virtual ObjectResult<IMspr_vw_AppAppFields_Result> IMspr_vw_AppAppFields(Nullable<int> iDSolicitud, string iDEstatus)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var iDEstatusParameter = iDEstatus != null ?
                new ObjectParameter("IDEstatus", iDEstatus) :
                new ObjectParameter("IDEstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_AppAppFields_Result>("IMspr_vw_AppAppFields", iDSolicitudParameter, iDEstatusParameter);
        }
    
        public virtual ObjectResult<IMspr_vw_AppFieldStatus_Result> IMspr_vw_AppFieldStatus(string iDEstatus)
        {
            var iDEstatusParameter = iDEstatus != null ?
                new ObjectParameter("IDEstatus", iDEstatus) :
                new ObjectParameter("IDEstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_AppFieldStatus_Result>("IMspr_vw_AppFieldStatus", iDEstatusParameter);
        }
    
        public virtual ObjectResult<IMspr_vw_AppFollowingReport_Result> IMspr_vw_AppFollowingReport(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_AppFollowingReport_Result>("IMspr_vw_AppFollowingReport", usuarioParameter);
        }
    
        public virtual ObjectResult<IMspr_vw_AppViewReport_Result> IMspr_vw_AppViewReport(string usuario, Nullable<int> noConfirmacion, string iDEstado, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var noConfirmacionParameter = noConfirmacion.HasValue ?
                new ObjectParameter("NoConfirmacion", noConfirmacion) :
                new ObjectParameter("NoConfirmacion", typeof(int));
    
            var iDEstadoParameter = iDEstado != null ?
                new ObjectParameter("IDEstado", iDEstado) :
                new ObjectParameter("IDEstado", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("Fecha1", fecha1) :
                new ObjectParameter("Fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("Fecha2", fecha2) :
                new ObjectParameter("Fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_AppViewReport_Result>("IMspr_vw_AppViewReport", usuarioParameter, noConfirmacionParameter, iDEstadoParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<IMspr_vw_AppWorkFlow_Result> IMspr_vw_AppWorkFlow(string usuario, Nullable<int> iDSolicitud, Nullable<System.DateTime> dFechaDesde, Nullable<System.DateTime> dFechaHasta, string xsEstatus)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            var dFechaDesdeParameter = dFechaDesde.HasValue ?
                new ObjectParameter("dFechaDesde", dFechaDesde) :
                new ObjectParameter("dFechaDesde", typeof(System.DateTime));
    
            var dFechaHastaParameter = dFechaHasta.HasValue ?
                new ObjectParameter("dFechaHasta", dFechaHasta) :
                new ObjectParameter("dFechaHasta", typeof(System.DateTime));
    
            var xsEstatusParameter = xsEstatus != null ?
                new ObjectParameter("XsEstatus", xsEstatus) :
                new ObjectParameter("XsEstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_AppWorkFlow_Result>("IMspr_vw_AppWorkFlow", usuarioParameter, iDSolicitudParameter, dFechaDesdeParameter, dFechaHastaParameter, xsEstatusParameter);
        }
    
        public virtual ObjectResult<IMspr_vw_ListReports_Result> IMspr_vw_ListReports(Nullable<int> iDReport)
        {
            var iDReportParameter = iDReport.HasValue ?
                new ObjectParameter("IDReport", iDReport) :
                new ObjectParameter("IDReport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_ListReports_Result>("IMspr_vw_ListReports", iDReportParameter);
        }
    
        public virtual ObjectResult<IMspr_vw_ReportSpec_Result> IMspr_vw_ReportSpec(string sUsuario, Nullable<int> iDSolicitud)
        {
            var sUsuarioParameter = sUsuario != null ?
                new ObjectParameter("sUsuario", sUsuario) :
                new ObjectParameter("sUsuario", typeof(string));
    
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMspr_vw_ReportSpec_Result>("IMspr_vw_ReportSpec", sUsuarioParameter, iDSolicitudParameter);
        }
    
        public virtual int sp_ActualizaImagen(string pre, byte[] imagen)
        {
            var preParameter = pre != null ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizaImagen", preParameter, imagenParameter);
        }
    
        public virtual ObjectResult<sp_cargarPrecal_Result> sp_cargarPrecal(string fecha1, string fecha2)
        {
            var fecha1Parameter = fecha1 != null ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(string));
    
            var fecha2Parameter = fecha2 != null ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_cargarPrecal_Result>("sp_cargarPrecal", fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertarPre(string pre, string nombres, string ap, string am, string nac, string dom, string col, string cd, string mun, string est, string cP, string cel, string email, string tienda, string promotor, Nullable<System.DateTime> fecha, string usu, byte[] imagen)
        {
            var preParameter = pre != null ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apParameter = ap != null ?
                new ObjectParameter("ap", ap) :
                new ObjectParameter("ap", typeof(string));
    
            var amParameter = am != null ?
                new ObjectParameter("am", am) :
                new ObjectParameter("am", typeof(string));
    
            var nacParameter = nac != null ?
                new ObjectParameter("nac", nac) :
                new ObjectParameter("nac", typeof(string));
    
            var domParameter = dom != null ?
                new ObjectParameter("dom", dom) :
                new ObjectParameter("dom", typeof(string));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            var cdParameter = cd != null ?
                new ObjectParameter("cd", cd) :
                new ObjectParameter("cd", typeof(string));
    
            var munParameter = mun != null ?
                new ObjectParameter("mun", mun) :
                new ObjectParameter("mun", typeof(string));
    
            var estParameter = est != null ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuParameter = usu != null ?
                new ObjectParameter("usu", usu) :
                new ObjectParameter("usu", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertarPre", preParameter, nombresParameter, apParameter, amParameter, nacParameter, domParameter, colParameter, cdParameter, munParameter, estParameter, cPParameter, celParameter, emailParameter, tiendaParameter, promotorParameter, fechaParameter, usuParameter, imagenParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertarPre2(string pre, string nombres, string ap, string am, string nac, string dom, string col, string cd, string mun, string est, string cP, string cel, string email, string tienda, string promotor, Nullable<System.DateTime> fecha, string usu, string mTQ, Nullable<int> confirmado, byte[] imagen, string rfc)
        {
            var preParameter = pre != null ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apParameter = ap != null ?
                new ObjectParameter("ap", ap) :
                new ObjectParameter("ap", typeof(string));
    
            var amParameter = am != null ?
                new ObjectParameter("am", am) :
                new ObjectParameter("am", typeof(string));
    
            var nacParameter = nac != null ?
                new ObjectParameter("nac", nac) :
                new ObjectParameter("nac", typeof(string));
    
            var domParameter = dom != null ?
                new ObjectParameter("dom", dom) :
                new ObjectParameter("dom", typeof(string));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            var cdParameter = cd != null ?
                new ObjectParameter("cd", cd) :
                new ObjectParameter("cd", typeof(string));
    
            var munParameter = mun != null ?
                new ObjectParameter("mun", mun) :
                new ObjectParameter("mun", typeof(string));
    
            var estParameter = est != null ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuParameter = usu != null ?
                new ObjectParameter("usu", usu) :
                new ObjectParameter("usu", typeof(string));
    
            var mTQParameter = mTQ != null ?
                new ObjectParameter("MTQ", mTQ) :
                new ObjectParameter("MTQ", typeof(string));
    
            var confirmadoParameter = confirmado.HasValue ?
                new ObjectParameter("Confirmado", confirmado) :
                new ObjectParameter("Confirmado", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertarPre2", preParameter, nombresParameter, apParameter, amParameter, nacParameter, domParameter, colParameter, cdParameter, munParameter, estParameter, cPParameter, celParameter, emailParameter, tiendaParameter, promotorParameter, fechaParameter, usuParameter, mTQParameter, confirmadoParameter, imagenParameter, rfcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertarPre3(string pre, string nombres, string ap, string am, string nac, string dom, string col, string cd, string mun, string est, string cP, string cel, string email, string tienda, string promotor, Nullable<System.DateTime> fecha, string usu, string mTQ, Nullable<int> confirmado, string rfc)
        {
            var preParameter = pre != null ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apParameter = ap != null ?
                new ObjectParameter("ap", ap) :
                new ObjectParameter("ap", typeof(string));
    
            var amParameter = am != null ?
                new ObjectParameter("am", am) :
                new ObjectParameter("am", typeof(string));
    
            var nacParameter = nac != null ?
                new ObjectParameter("nac", nac) :
                new ObjectParameter("nac", typeof(string));
    
            var domParameter = dom != null ?
                new ObjectParameter("dom", dom) :
                new ObjectParameter("dom", typeof(string));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            var cdParameter = cd != null ?
                new ObjectParameter("cd", cd) :
                new ObjectParameter("cd", typeof(string));
    
            var munParameter = mun != null ?
                new ObjectParameter("mun", mun) :
                new ObjectParameter("mun", typeof(string));
    
            var estParameter = est != null ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuParameter = usu != null ?
                new ObjectParameter("usu", usu) :
                new ObjectParameter("usu", typeof(string));
    
            var mTQParameter = mTQ != null ?
                new ObjectParameter("MTQ", mTQ) :
                new ObjectParameter("MTQ", typeof(string));
    
            var confirmadoParameter = confirmado.HasValue ?
                new ObjectParameter("Confirmado", confirmado) :
                new ObjectParameter("Confirmado", typeof(int));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertarPre3", preParameter, nombresParameter, apParameter, amParameter, nacParameter, domParameter, colParameter, cdParameter, munParameter, estParameter, cPParameter, celParameter, emailParameter, tiendaParameter, promotorParameter, fechaParameter, usuParameter, mTQParameter, confirmadoParameter, rfcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertarPre4(string pre, string nombres, string ap, string am, string nac, string dom, string col, string cd, string mun, string est, string cP, string cel, string email, string tienda, string promotor, Nullable<System.DateTime> fecha, string usu, string mTQ, Nullable<int> confirmado, string rfc, string curp)
        {
            var preParameter = pre != null ?
                new ObjectParameter("pre", pre) :
                new ObjectParameter("pre", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apParameter = ap != null ?
                new ObjectParameter("ap", ap) :
                new ObjectParameter("ap", typeof(string));
    
            var amParameter = am != null ?
                new ObjectParameter("am", am) :
                new ObjectParameter("am", typeof(string));
    
            var nacParameter = nac != null ?
                new ObjectParameter("nac", nac) :
                new ObjectParameter("nac", typeof(string));
    
            var domParameter = dom != null ?
                new ObjectParameter("dom", dom) :
                new ObjectParameter("dom", typeof(string));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            var cdParameter = cd != null ?
                new ObjectParameter("cd", cd) :
                new ObjectParameter("cd", typeof(string));
    
            var munParameter = mun != null ?
                new ObjectParameter("mun", mun) :
                new ObjectParameter("mun", typeof(string));
    
            var estParameter = est != null ?
                new ObjectParameter("est", est) :
                new ObjectParameter("est", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var celParameter = cel != null ?
                new ObjectParameter("cel", cel) :
                new ObjectParameter("cel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            var promotorParameter = promotor != null ?
                new ObjectParameter("promotor", promotor) :
                new ObjectParameter("promotor", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var usuParameter = usu != null ?
                new ObjectParameter("usu", usu) :
                new ObjectParameter("usu", typeof(string));
    
            var mTQParameter = mTQ != null ?
                new ObjectParameter("MTQ", mTQ) :
                new ObjectParameter("MTQ", typeof(string));
    
            var confirmadoParameter = confirmado.HasValue ?
                new ObjectParameter("Confirmado", confirmado) :
                new ObjectParameter("Confirmado", typeof(int));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertarPre4", preParameter, nombresParameter, apParameter, amParameter, nacParameter, domParameter, colParameter, cdParameter, munParameter, estParameter, cPParameter, celParameter, emailParameter, tiendaParameter, promotorParameter, fechaParameter, usuParameter, mTQParameter, confirmadoParameter, rfcParameter, curpParameter);
        }
    
        public virtual ObjectResult<sp_obtenDetalle_Result> sp_obtenDetalle(string iDprecalificador)
        {
            var iDprecalificadorParameter = iDprecalificador != null ?
                new ObjectParameter("IDprecalificador", iDprecalificador) :
                new ObjectParameter("IDprecalificador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenDetalle_Result>("sp_obtenDetalle", iDprecalificadorParameter);
        }
    
        public virtual ObjectResult<sp_obtenMTQ_Result> sp_obtenMTQ(string iDprecalificador)
        {
            var iDprecalificadorParameter = iDprecalificador != null ?
                new ObjectParameter("IDprecalificador", iDprecalificador) :
                new ObjectParameter("IDprecalificador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenMTQ_Result>("sp_obtenMTQ", iDprecalificadorParameter);
        }
    
        public virtual ObjectResult<sp_verificar_rfc_Result> sp_verificar_rfc(string rfc)
        {
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_verificar_rfc_Result>("sp_verificar_rfc", rfcParameter);
        }
    
        public virtual ObjectResult<sp_VerificarSinSubir_Result> sp_VerificarSinSubir(string tienda)
        {
            var tiendaParameter = tienda != null ?
                new ObjectParameter("tienda", tienda) :
                new ObjectParameter("tienda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VerificarSinSubir_Result>("sp_VerificarSinSubir", tiendaParameter);
        }
    
        public virtual int Update_Promotor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Promotor");
        }
    
        public virtual ObjectResult<Nullable<int>> Validar_Solicitud(Nullable<int> iDSolicitud)
        {
            var iDSolicitudParameter = iDSolicitud.HasValue ?
                new ObjectParameter("IDSolicitud", iDSolicitud) :
                new ObjectParameter("IDSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validar_Solicitud", iDSolicitudParameter);
        }
    }
}
